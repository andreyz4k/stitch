{"DSL": {"logVariable": 0.0, "logLambda": -3.0, "logFreeVar": 3.0, "productions": [{"expression": "rev_fix_param", "logProbability": 0.0, "type": "t0 -> t1 -> (t0 -> t1) -> t0", "is_reversible": true}, {"expression": "map", "logProbability": 0.0, "type": "(t0 -> t1) -> list(t0) -> list(t1)", "is_reversible": true}, {"expression": "map_set", "logProbability": 0.0, "type": "(t0 -> t1) -> set(t0) -> set(t1)", "is_reversible": true}, {"expression": "map_grid", "logProbability": 0.0, "type": "(t0 -> t1) -> grid(t0) -> grid(t1)", "is_reversible": true}, {"expression": "map2", "logProbability": 0.0, "type": "(t0 -> t1 -> t2) -> list(t0) -> list(t1) -> list(t2)", "is_reversible": true}, {"expression": "map2_grid", "logProbability": 0.0, "type": "(t0 -> t1 -> t2) -> grid(t0) -> grid(t1) -> grid(t2)", "is_reversible": true}, {"expression": "unfold", "logProbability": 0.0, "type": "(t0 -> bool) -> (t0 -> t1) -> (t0 -> t0) -> t0 -> list(t1)", "is_reversible": false}, {"expression": "range", "logProbability": 0.0, "type": "int -> list(int)", "is_reversible": true}, {"expression": "index", "logProbability": 0.0, "type": "int -> list(t0) -> t0", "is_reversible": false}, {"expression": "index2", "logProbability": 0.0, "type": "int -> int -> grid(t0) -> t0", "is_reversible": false}, {"expression": "fold", "logProbability": 0.0, "type": "(t0 -> t1 -> t1) -> list(t0) -> t1 -> t1", "is_reversible": true}, {"expression": "fold_set", "logProbability": 0.0, "type": "(t0 -> t1 -> t1) -> set(t0) -> t1 -> t1", "is_reversible": true}, {"expression": "fold_h", "logProbability": 0.0, "type": "(t0 -> t1 -> t1) -> grid(t0) -> list(t1) -> list(t1)", "is_reversible": true}, {"expression": "fold_v", "logProbability": 0.0, "type": "(t0 -> t1 -> t1) -> grid(t0) -> list(t1) -> list(t1)", "is_reversible": true}, {"expression": "length", "logProbability": 0.0, "type": "list(t0) -> int", "is_reversible": false}, {"expression": "height", "logProbability": 0.0, "type": "grid(t0) -> int", "is_reversible": false}, {"expression": "width", "logProbability": 0.0, "type": "grid(t0) -> int", "is_reversible": false}, {"expression": "if", "logProbability": 0.0, "type": "bool -> t0 -> t0 -> t0", "is_reversible": false}, {"expression": "+", "logProbability": 0.0, "type": "int -> int -> int", "is_reversible": true}, {"expression": "-", "logProbability": 0.0, "type": "int -> int -> int", "is_reversible": true}, {"expression": "empty", "logProbability": 0.0, "type": "list(t0)", "is_reversible": true}, {"expression": "cons", "logProbability": 0.0, "type": "t0 -> list(t0) -> list(t0)", "is_reversible": true}, {"expression": "car", "logProbability": 0.0, "type": "list(t0) -> t0", "is_reversible": false}, {"expression": "cdr", "logProbability": 0.0, "type": "list(t0) -> list(t0)", "is_reversible": false}, {"expression": "empty?", "logProbability": 0.0, "type": "list(t0) -> bool", "is_reversible": false}, {"expression": "*", "logProbability": 0.0, "type": "int -> int -> int", "is_reversible": true}, {"expression": "mod", "logProbability": 0.0, "type": "int -> int -> int", "is_reversible": false}, {"expression": "gt?", "logProbability": 0.0, "type": "int -> int -> bool", "is_reversible": false}, {"expression": "eq?", "logProbability": 0.0, "type": "t0 -> t0 -> bool", "is_reversible": false}, {"expression": "is-prime", "logProbability": 0.0, "type": "int -> bool", "is_reversible": false}, {"expression": "is-square", "logProbability": 0.0, "type": "int -> bool", "is_reversible": false}, {"expression": "repeat", "logProbability": 0.0, "type": "t0 -> int -> list(t0)", "is_reversible": true}, {"expression": "repeat_grid", "logProbability": 0.0, "type": "t0 -> int -> int -> grid(t0)", "is_reversible": true}, {"expression": "concat", "logProbability": 0.0, "type": "list(t0) -> list(t0) -> list(t0)", "is_reversible": true}, {"expression": "rows", "logProbability": 0.0, "type": "grid(t0) -> list(list(t0))", "is_reversible": true}, {"expression": "columns", "logProbability": 0.0, "type": "grid(t0) -> list(list(t0))", "is_reversible": true}, {"expression": "rows_to_grid", "logProbability": 0.0, "type": "list(list(t0)) -> grid(t0)", "is_reversible": true}, {"expression": "columns_to_grid", "logProbability": 0.0, "type": "list(list(t0)) -> grid(t0)", "is_reversible": true}, {"expression": "rev_select", "logProbability": 0.0, "type": "(t0 -> bool) -> list(t0) -> list(t0) -> list(t0)", "is_reversible": true}, {"expression": "rev_select_set", "logProbability": 0.0, "type": "(t0 -> bool) -> set(t0) -> set(t0) -> set(t0)", "is_reversible": true}, {"expression": "rev_select_grid", "logProbability": 0.0, "type": "(t0 -> bool) -> grid(t0) -> grid(t0) -> grid(t0)", "is_reversible": true}, {"expression": "rev_list_elements", "logProbability": 0.0, "type": "set(tuple2(int, t0)) -> int -> list(t0)", "is_reversible": true}, {"expression": "rev_grid_elements", "logProbability": 0.0, "type": "set(tuple2(tuple2(int, int), t0)) -> int -> int -> grid(t0)", "is_reversible": true}, {"expression": "zip2", "logProbability": 0.0, "type": "list(t0) -> list(t1) -> list(tuple2(t0, t1))", "is_reversible": true}, {"expression": "zip_grid2", "logProbability": 0.0, "type": "grid(t0) -> grid(t1) -> grid(tuple2(t0, t1))", "is_reversible": true}, {"expression": "tuple2", "logProbability": 0.0, "type": "t0 -> t1 -> tuple2(t0, t1)", "is_reversible": true}, {"expression": "tuple2_first", "logProbability": 0.0, "type": "tuple2(t0, t1) -> t0", "is_reversible": true}, {"expression": "tuple2_second", "logProbability": 0.0, "type": "tuple2(t0, t1) -> t1", "is_reversible": true}, {"expression": "reverse", "logProbability": 0.0, "type": "list(t0) -> list(t0)", "is_reversible": true}, {"expression": "rev_fold", "logProbability": 0.0, "type": "(t0 -> t1 -> t1) -> t1 -> t1 -> list(t0)", "is_reversible": true}, {"expression": "rev_fold_set", "logProbability": 0.0, "type": "(t0 -> t1 -> t1) -> t1 -> t1 -> set(t0)", "is_reversible": true}, {"expression": "list_to_set", "logProbability": 0.0, "type": "list(t0) -> set(t0)", "is_reversible": false}, {"expression": "adjoin", "logProbability": 0.0, "type": "t0 -> set(t0) -> set(t0)", "is_reversible": true}, {"expression": "empty_set", "logProbability": 0.0, "type": "set(t0)", "is_reversible": true}, {"expression": "rev_groupby", "logProbability": 0.0, "type": "(t0 -> t1) -> t0 -> set(tuple2(t1, set(t0))) -> set(tuple2(t1, set(t0)))", "is_reversible": true}, {"expression": "rev_greedy_cluster", "logProbability": 0.0, "type": "(t0 -> set(t0) -> bool) -> t0 -> set(set(t0)) -> set(set(t0))", "is_reversible": true}, {"expression": "not", "logProbability": 0.0, "type": "bool -> bool", "is_reversible": true}, {"expression": "and", "logProbability": 0.0, "type": "bool -> bool -> bool", "is_reversible": true}, {"expression": "or", "logProbability": 0.0, "type": "bool -> bool -> bool", "is_reversible": true}, {"expression": "all", "logProbability": 0.0, "type": "(t0 -> bool) -> list(t0) -> bool", "is_reversible": false}, {"expression": "any", "logProbability": 0.0, "type": "(t0 -> bool) -> list(t0) -> bool", "is_reversible": false}, {"expression": "all_set", "logProbability": 0.0, "type": "(t0 -> bool) -> set(t0) -> bool", "is_reversible": false}, {"expression": "any_set", "logProbability": 0.0, "type": "(t0 -> bool) -> set(t0) -> bool", "is_reversible": false}, {"expression": "abs", "logProbability": 0.0, "type": "int -> int", "is_reversible": true}, {"expression": "max_int", "logProbability": 0.0, "type": "int", "is_reversible": false}, {"expression": "min_int", "logProbability": 0.0, "type": "int", "is_reversible": false}, {"expression": "collect", "logProbability": 0.0, "type": "set(t0) -> list(t0)", "is_reversible": true}, {"expression": "0", "logProbability": 0.0, "type": "int", "is_reversible": true}, {"expression": "1", "logProbability": 0.0, "type": "int", "is_reversible": true}]}, "frontiers": [{"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "8b6f1472.json", "programs": [{"program": "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in let $v7, $v8, $v9 = rev($v3 = (rev_grid_elements $v7 $v8 $v9)) in let $v10 = rev($v7 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (not (gt? (+ (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2))))) 1))) $0))) $1 $0))) empty_set $v10)) in let $v11 = rev($v10 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v11)) in let $v12 = rev($v11 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v12)) in let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v13)) $v14 $v15) $v13 (lambda Const(set(tuple2(int, int)), Set([(0, 0), (0, 2), (2, 0), (1, 1), (0, 1), (2, 2), (2, 1)]))))) in let $v16::int = Const(int, 1) in let $v17::set(tuple2(tuple2(tuple2(int, int), set(tuple2(int, int))), color)) = (map_set (lambda (tuple2 (tuple2 (tuple2 (+ (tuple2_first (tuple2_first (tuple2_first $0))) $v16) (tuple2_second (tuple2_first (tuple2_first $0)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v14) in let $v18::set(tuple2(tuple2(tuple2(int, int), set(tuple2(int, int))), color)) = (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v13)) $v17 $v15) in let $v19::set(tuple2(set(tuple2(int, int)), color)) = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v18) in let $v20::set(set(tuple2(tuple2(int, int), color))) = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v19) in let $v21::set(tuple2(tuple2(int, int), color)) = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (not (gt? (+ (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2))))) 1))) $0))) $1 $0))) empty_set $v20) in let $v22::grid(color) = (rev_grid_elements $v21 $v8 $v9) in let $v23::grid(color) = (repeat_grid $v4 $v5 $v6) in (rev_select_grid (lambda (eq? $0 $v1)) $v23 $v22)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "22d4b83c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "c39eb8c1.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d1d28121.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3064e575.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "21daab95.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "11868b19.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6e62d371.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "eb456b4d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a2965d01.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "4c7a5b59.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "77352326.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e70425d2.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "102b44f9.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "04e912a9.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a5e6f594.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "0f39a9d9.json", "programs": [{"program": "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in let $v7, $v8, $v9 = rev($v3 = (rev_grid_elements $v7 $v8 $v9)) in let $v10 = rev($v7 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v10)) in let $v11 = rev($v10 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v11)) in let $v12 = rev($v11 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v12)) in let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v13)) $v14 $v15) $v13 (lambda Const(set(tuple2(int, int)), Set([(0, 0), (0, 2), (2, 0), (1, 1), (0, 1), (2, 2), (2, 1)]))))) in let $v16::int = Const(int, 1) in let $v17::set(tuple2(tuple2(tuple2(int, int), set(tuple2(int, int))), color)) = (map_set (lambda (tuple2 (tuple2 (tuple2 (+ (tuple2_first (tuple2_first (tuple2_first $0))) $v16) (tuple2_second (tuple2_first (tuple2_first $0)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v14) in let $v18::set(tuple2(tuple2(tuple2(int, int), set(tuple2(int, int))), color)) = (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v13)) $v17 $v15) in let $v19::set(tuple2(set(tuple2(int, int)), color)) = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v18) in let $v20::set(set(tuple2(tuple2(int, int), color))) = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v19) in let $v21::set(tuple2(tuple2(int, int), color)) = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v20) in let $v22::grid(color) = (rev_grid_elements $v21 $v8 $v9) in let $v23::grid(color) = (repeat_grid $v4 $v5 $v6) in (rev_select_grid (lambda (eq? $0 $v1)) $v23 $v22)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f0717d5c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "96a3789b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "25e3f90f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a85d4709.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "c8cbb738.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "8e1813be.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a699fb00.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "5c2c9af4.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "44f52bb0.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "23581191.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "94f9d214.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f9012d9b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "4258a5f9.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "bdad9b1f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d06dbe63.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "8403a5d5.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "67e8384a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "8731374e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "25ff71a9.json", "programs": [{"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3, $v4 = rev($v2 = (cons $v3 $v4)) in let $v5::list(list(color)) = (reverse $v4) in let $v6::list(list(color)) = (cons $v3 $v5) in (rows_to_grid $v6)", "logLikelihood": 0.0}, {"program": "let $v1::list(color) = Const(list(color), Any[0, 0, 0]) in let $v2 = rev($inp0 = (rows_to_grid $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4, $v5 = rev($v3 = (cons $v4 $v5)) in let $v6::list(list(color)) = (reverse $v5) in let $v7::list(list(color)) = (cons $v1 $v6) in (rows_to_grid $v7)", "logLikelihood": 0.0}, {"program": "let $v1::list(color) = Const(list(color), Any[0, 0, 0]) in let $v2 = rev($inp0 = (rows_to_grid $v2)) in let $v3, $v4 = rev($v2 = (rev_fix_param (concat $v3 $v4) $v4 (lambda Const(list(list(color)), Vector{Any}[[0, 0, 0]])))) in let $v5::list(list(color)) = (reverse $v3) in let $v6::list(list(color)) = (reverse $v5) in let $v7::list(list(color)) = (cons $v1 $v6) in (rows_to_grid $v7)", "logLikelihood": 0.0}, {"program": "let $v1::list(color) = Const(list(color), Any[0, 0, 0]) in let $v2 = rev($inp0 = (rows_to_grid $v2)) in let $v3, $v4 = rev($v2 = (cons $v3 $v4)) in let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in let $v7::list(list(color)) = Const(list(list(color)), Any[]) in let $v8::list(list(color)) = (cons $v5 $v7) in let $v9::list(list(color)) = (cons $v3 $v8) in let $v10::list(list(color)) = (cons $v1 $v9) in (rows_to_grid $v10)", "logLikelihood": 0.0}, {"program": "let $v1::list(color) = Const(list(color), Any[0, 0, 0]) in let $v2 = rev($inp0 = (rows_to_grid $v2)) in let $v3, $v4 = rev($v2 = (cons $v3 $v4)) in let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in let $v7::list(list(color)) = empty in let $v8::list(list(color)) = (cons $v5 $v7) in let $v9::list(list(color)) = (cons $v3 $v8) in let $v10::list(list(color)) = (cons $v1 $v9) in (rows_to_grid $v10)", "logLikelihood": 0.0}, {"program": "let $v1::list(color) = Const(list(color), Any[0, 0, 0]) in let $v2 = rev($inp0 = (rows_to_grid $v2)) in let $v3, $v4 = rev($v2 = (cons $v3 $v4)) in let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in let $v7::set(list(color)) = empty_set in let $v8::list(list(color)) = (collect $v7) in let $v9::list(list(color)) = (cons $v5 $v8) in let $v10::list(list(color)) = (cons $v3 $v9) in let $v11::list(list(color)) = (cons $v1 $v10) in (rows_to_grid $v11)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2, $v3 = rev($v1 = (cons $v2 $v3)) in let $v4 = rev($v1 = (reverse $v4)) in let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in let $v7::list(list(color)) = Const(list(list(color)), Vector{Any}[[0, 0, 0]]) in let $v8::list(list(color)) = (concat $v6 $v7) in let $v9::tuple2(t0, list(list(color))) = (tuple2 $v2 $v8) in let $v10::list(list(color)) = (tuple2_second $v9) in let $v11::list(list(color)) = (reverse $v10) in (rows_to_grid $v11)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2, $v3 = rev($v1 = (cons $v2 $v3)) in let $v4 = rev($v1 = (reverse $v4)) in let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in let $v7::list(list(color)) = Const(list(list(color)), Vector{Any}[[0, 0, 0]]) in let $v8::list(list(color)) = (concat $v6 $v7) in let $v9::tuple2(t0, list(list(color))) = (tuple2 $v3 $v8) in let $v10::list(list(color)) = (tuple2_second $v9) in let $v11::list(list(color)) = (reverse $v10) in (rows_to_grid $v11)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_second $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3 = rev($inp0 = (rows_to_grid $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in let $v7::list(list(color)) = Const(list(list(color)), Vector{Any}[[0, 0, 0]]) in let $v8::list(list(color)) = (concat $v6 $v7) in let $v9::tuple2(t0, list(list(color))) = (tuple2 $v2 $v8) in let $v10::list(list(color)) = (tuple2_second $v9) in let $v11::list(list(color)) = (reverse $v10) in (rows_to_grid $v11)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_second $v2)) in let $v3 = rev($v2 = (tuple2_first $v3)) in let $v4 = rev($v1 = (reverse $v4)) in let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in let $v7::list(list(color)) = Const(list(list(color)), Vector{Any}[[0, 0, 0]]) in let $v8::list(list(color)) = (concat $v6 $v7) in let $v9::tuple2(t0, list(list(color))) = (tuple2 $v3 $v8) in let $v10::list(list(color)) = (tuple2_second $v9) in let $v11::list(list(color)) = (reverse $v10) in (rows_to_grid $v11)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ecdecbb3.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6e19193c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "39e1d7f9.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ba97ae07.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "99b1bc43.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "77fdfe62.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "50cb2852.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "4c5c2cf0.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d5d6de2d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b91ae062.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d037b0a7.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "93b581b8.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "025d127b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d2abd087.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "017c7c7b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "28bf18c6.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "9f236235.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "c3e719e8.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "264363fd.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6855a6e4.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f8c80d96.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "7837ac64.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a68b268e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "5c0a986e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "890034e9.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6773b310.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "49d1d64f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6cdd2623.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "36d67576.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ed36ccf7.json", "programs": [{"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in (rows_to_grid $v2)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in (rows_to_grid $v2)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3::list(list(color)) = (tuple2_first $v2) in let $v4::list(list(color)) = (reverse $v3) in (rows_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_second $v2)) in let $v3::list(list(color)) = (tuple2_second $v2) in let $v4::list(list(color)) = (reverse $v3) in (rows_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_second $v1)) in let $v2, $v3 = rev($v1 = (tuple2 $v2 $v3)) in let $v4 = rev($v3 = (columns_to_grid $v4)) in let $v5 = rev($v4 = (reverse $v5)) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_first $v1)) in let $v2, $v3 = rev($v1 = (tuple2 $v2 $v3)) in let $v4 = rev($v2 = (columns_to_grid $v4)) in let $v5::list(list(color)) = (reverse $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_second $v1)) in let $v2, $v3 = rev($v1 = (tuple2 $v2 $v3)) in let $v4 = rev($v3 = (columns_to_grid $v4)) in let $v5::list(list(color)) = (reverse $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (reverse $v2) in let $v4::list(list(color)) = (reverse $v3) in (rows_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3, $v4 = rev($v2 = (tuple2 $v3 $v4)) in let $v5::list(list(color)) = (reverse $v3) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2, $v3 = rev($v1 = (rev_list_elements $v2 $v3)) in let $v4::int = Const(int, 3) in let $v5::list(list(color)) = (rev_list_elements $v2 $v4) in let $v6::list(list(color)) = (reverse $v5) in (rows_to_grid $v6)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d8c310e9.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1f876c06.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b60334d2.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6c434453.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "810b9b61.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1c786137.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "74dd1130.json", "programs": [{"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in (rows_to_grid $v1)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in (columns_to_grid $v1)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (columns $v2)) in $v2", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3::list(list(color)) = (tuple2_first $v2) in (rows_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (reverse $v2) in (rows_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in let $v3::list(list(color)) = (reverse $v2) in (rows_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in let $v3::list(list(color)) = (reverse $v2) in (columns_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (rows $v2)) in let $v3 = rev($v1 = (columns $v3)) in let $v4::tuple2(t0, grid(color)) = (tuple2 $v2 $v3) in (tuple2_second $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_first $v1)) in let $v2 = rev($inp0 = (rows_to_grid $v2)) in let $v3::tuple2(t0, list(list(color))) = (tuple2 $v1 $v2) in let $v4::list(list(color)) = (tuple2_second $v3) in (columns_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2::grid(color) = (rows_to_grid $v1) in let $v3 = rev($v1 = (reverse $v3)) in let $v4::tuple2(grid(color), t0) = (tuple2 $v2 $v3) in (tuple2_first $v4)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ded97339.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "aedd82e4.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "5614dbcf.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d22278a0.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d406998b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a5313dff.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6150a2bd.json", "programs": [{"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (columns $v3)) in let $v4::list(list(color)) = (rows $v3) in let $v5::list(list(color)) = (reverse $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (rows $v3)) in let $v4::list(list(color)) = (columns $v3) in let $v5::list(list(color)) = (reverse $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (columns $v3)) in let $v4::list(list(color)) = (rows $v3) in let $v5::list(list(color)) = (reverse $v4) in (columns_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::grid(color) = (rows_to_grid $v2) in let $v4::list(list(color)) = (columns $v3) in let $v5::list(list(color)) = (reverse $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (columns $v2)) in let $v3 = rev($v2 = (columns_to_grid $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::grid(color) = (rows_to_grid $v4) in let $v6::list(list(color)) = (columns $v5) in let $v7::list(list(color)) = (reverse $v6) in (rows_to_grid $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (columns $v3)) in let $v4 = rev($v3 = (columns_to_grid $v4)) in let $v5::grid(color) = (rows_to_grid $v4) in let $v6::list(list(color)) = (columns $v5) in let $v7::list(list(color)) = (reverse $v6) in (columns_to_grid $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (columns $v3)) in let $v4 = rev($v3 = (rows_to_grid $v4)) in let $v5::list(list(color)) = (reverse $v4) in let $v6::grid(color) = (columns_to_grid $v5) in let $v7::list(list(color)) = (columns $v6) in (columns_to_grid $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (columns $v3)) in let $v4 = rev($v3 = (rows_to_grid $v4)) in let $v5::list(list(color)) = (reverse $v4) in let $v6::grid(color) = (columns_to_grid $v5) in let $v7::list(list(color)) = (rows $v6) in (rows_to_grid $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_second $v1)) in let $v2, $v3 = rev($v1 = (tuple2 $v2 $v3)) in let $v4 = rev($v3 = (columns_to_grid $v4)) in let $v5::list(list(color)) = (reverse $v4) in let $v6::grid(color) = (rows_to_grid $v5) in let $v7::list(list(color)) = (columns $v6) in let $v8::list(list(color)) = (reverse $v7) in (rows_to_grid $v8)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (columns $v2)) in let $v3 = rev($v2 = (rows_to_grid $v3)) in let $v4 = rev($inp0 = (rows_to_grid $v4)) in let $v5 = rev($v4 = (map (lambda (reverse $0)) $v5)) in let $v6::tuple2(t0, list(list(color))) = (tuple2 $v3 $v5) in let $v7::list(list(color)) = (tuple2_second $v6) in let $v8::list(list(color)) = (reverse $v7) in (rows_to_grid $v8)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "97a05b5b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "dbc1a6ce.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3bd67248.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e9afcf9a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d364b489.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "2013d3e2.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "2dc579da.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ec883f72.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "2281f1f4.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "68b16354.json", "programs": [{"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in (rows_to_grid $v2)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in (rows_to_grid $v2)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3::list(list(color)) = (tuple2_first $v2) in let $v4::list(list(color)) = (reverse $v3) in (rows_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_second $v2)) in let $v3::list(list(color)) = (tuple2_second $v2) in let $v4::list(list(color)) = (reverse $v3) in (rows_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_first $v1)) in let $v2, $v3 = rev($v1 = (tuple2 $v2 $v3)) in let $v4 = rev($v2 = (rows_to_grid $v4)) in let $v5::list(list(color)) = (reverse $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (reverse $v2) in let $v4::list(list(color)) = (reverse $v3) in (rows_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2, $v3 = rev($v1 = (cons $v2 $v3)) in let $v4::list(list(color)) = (cons $v2 $v3) in let $v5::list(list(color)) = (reverse $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::int = min_int in let $v4::tuple2(list(list(color)), t0) = (tuple2 $v2 $v3) in let $v5::list(list(color)) = (tuple2_first $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in let $v3::grid(color) = (rows_to_grid $v2) in let $v4 = rev($v1 = (tuple2_first $v4)) in let $v5::tuple2(grid(color), t0) = (tuple2 $v3 $v4) in (tuple2_first $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in let $v3::grid(color) = (rows_to_grid $v2) in let $v4, $v5 = rev($v1 = (cons $v4 $v5)) in let $v6::tuple2(grid(color), t0) = (tuple2 $v3 $v4) in (tuple2_first $v6)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a78176bb.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1a07d186.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "32597951.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "be94b721.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "cf98881b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6455b5f5.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "54d9e175.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "363442ee.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "91714a58.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a1570a43.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a87f7484.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6430c8c4.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "90f3ed37.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a5f85a15.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "95990924.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "c909285e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a3325580.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b94a9452.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d631b094.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "539a4f51.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6d0aefbc.json", "programs": [{"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (concat $v1 $v2) in (columns_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (reverse $v2) in let $v4::list(list(color)) = (concat $v3 $v2) in (columns_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (tuple2_first $v3)) in let $v4::list(list(color)) = (tuple2_first $v3) in let $v5::list(list(color)) = (concat $v1 $v4) in (columns_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3::list(list(color)) = (tuple2_first $v2) in let $v4::list(list(color)) = (reverse $v3) in let $v5::list(list(color)) = (concat $v1 $v4) in (columns_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (rows $v3)) in let $v4::list(list(color)) = (rows $v3) in let $v5::list(list(color)) = (concat $v1 $v4) in (columns_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (concat $v1 $v2) in let $v4::grid(color) = (rows_to_grid $v3) in let $v5::list(list(color)) = (columns $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_second $v1)) in let $v2, $v3 = rev($v1 = (tuple2 $v2 $v3)) in let $v4 = rev($v3 = (columns_to_grid $v4)) in let $v5 = rev($inp0 = (columns_to_grid $v5)) in let $v6 = rev($v5 = (reverse $v6)) in let $v7::list(list(color)) = (concat $v4 $v6) in (columns_to_grid $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($inp0 = (tuple2_first $v2)) in let $v3, $v4 = rev($v2 = (tuple2 $v3 $v4)) in let $v5 = rev($v3 = (columns_to_grid $v5)) in let $v6::list(list(color)) = (reverse $v5) in let $v7::list(list(color)) = (concat $v1 $v6) in (columns_to_grid $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3 = rev($v1 = (reverse $v3)) in let $v4::list(list(color)) = (concat $v1 $v3) in let $v5::grid(color) = (columns_to_grid $v4) in let $v6::tuple2(t0, grid(color)) = (tuple2 $v2 $v5) in (tuple2_second $v6)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_second $v2)) in let $v3 = rev($v1 = (reverse $v3)) in let $v4::list(list(color)) = (concat $v1 $v3) in let $v5::grid(color) = (columns_to_grid $v4) in let $v6::tuple2(t0, grid(color)) = (tuple2 $v2 $v5) in (tuple2_second $v6)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e179c5f4.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "623ea044.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a8c38be5.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "72322fa7.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "29623171.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d13f3404.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6e82a1ae.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b548a754.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "7ddcd7ec.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "7468f01a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "29c11459.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "2dd70a9a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "db3e9e38.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "8f2ea7aa.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6fa7a44f.json", "programs": [{"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (concat $v1 $v2) in (rows_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3::list(list(color)) = (tuple2_first $v2) in let $v4::list(list(color)) = (reverse $v3) in let $v5::list(list(color)) = (concat $v1 $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_first $v1)) in let $v2, $v3 = rev($v1 = (tuple2 $v2 $v3)) in let $v4 = rev($v2 = (rows_to_grid $v4)) in let $v5 = rev($inp0 = (rows_to_grid $v5)) in let $v6 = rev($v5 = (reverse $v6)) in let $v7::list(list(color)) = (concat $v4 $v6) in (rows_to_grid $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3 = rev($v1 = (reverse $v3)) in let $v4::list(list(color)) = (concat $v1 $v3) in let $v5::grid(color) = (rows_to_grid $v4) in let $v6::tuple2(t0, grid(color)) = (tuple2 $v2 $v5) in (tuple2_second $v6)", "logLikelihood": 0.0}, {"program": "let $v1, $v2, $v3 = rev($inp0 = (rev_grid_elements $v1 $v2 $v3)) in let $v4 = rev($inp0 = (rows_to_grid $v4)) in let $v5 = rev($v4 = (reverse $v5)) in let $v6::list(list(color)) = (concat $v4 $v5) in let $v7::grid(color) = (rows_to_grid $v6) in let $v8::tuple2(t0, grid(color)) = (tuple2 $v1 $v7) in (tuple2_second $v8)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_first $v1)) in let $v2 = rev($v1 = (tuple2_second $v2)) in let $v3 = rev($inp0 = (rows_to_grid $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::list(list(color)) = (concat $v3 $v4) in let $v6::grid(color) = (rows_to_grid $v5) in let $v7::tuple2(t0, grid(color)) = (tuple2 $v2 $v6) in (tuple2_second $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_second $v1)) in let $v2 = rev($v1 = (tuple2_second $v2)) in let $v3 = rev($inp0 = (rows_to_grid $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::list(list(color)) = (concat $v3 $v4) in let $v6::grid(color) = (rows_to_grid $v5) in let $v7::tuple2(t0, grid(color)) = (tuple2 $v2 $v6) in (tuple2_second $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (rows $v2)) in let $v3 = rev($v2 = (rows_to_grid $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::list(list(color)) = (reverse $v4) in let $v6 = rev($v1 = (reverse $v6)) in let $v7::list(list(color)) = (concat $v5 $v6) in (rows_to_grid $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3 = rev($inp0 = (rows_to_grid $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::list(list(color)) = (concat $v3 $v4) in let $v6::grid(color) = (rows_to_grid $v5) in let $v7::tuple2(t0, grid(color)) = (tuple2 $v2 $v6) in (tuple2_second $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_second $v1)) in let $v2, $v3 = rev($v1 = (tuple2 $v2 $v3)) in let $v4 = rev($inp0 = (rows_to_grid $v4)) in let $v5 = rev($v4 = (reverse $v5)) in let $v6::list(list(color)) = (concat $v4 $v5) in let $v7::grid(color) = (rows_to_grid $v6) in let $v8::tuple2(t0, grid(color)) = (tuple2 $v3 $v7) in (tuple2_second $v8)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "776ffc46.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "cbded52d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "97999447.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "846bdb03.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "8d510a79.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f25ffba3.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "c1d99e64.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "25d487eb.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "484b58aa.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ddf7fa4f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3906de3d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "7447852a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "c9f8e694.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e3497940.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "46442a0e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "c3f564a4.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d0f5fe59.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "4290ef0e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d6ad076f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "db93a21d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "67a423a3.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1190e5a7.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6e02f1e3.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b190f7f5.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f76d97a5.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3af2c5a8.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "239be575.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b8cdaf2b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "dc0a314f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "dc433765.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1e0a9b12.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "10fcaaa3.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "56dc2b01.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "4093f84a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "508bd3b6.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "62c24649.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "de1cd16c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "913fb3ed.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "662c240a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "fafffa47.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "7e0986d6.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "941d9a10.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6b9890af.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ff28f65a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "80af3007.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b27ca6d3.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f8b3ba0a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "150deff5.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "952a094c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1b2d62fb.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "928ad970.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d89b689b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3de23699.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e21d9049.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ba26e723.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6a1e5592.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "39a8645d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "56ff96f3.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a2fd1cf0.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a9f96cdd.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ae4f1146.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "22233c11.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "780d0b14.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3e980e27.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1e32b0e9.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "7f4411dc.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "4347f46a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6aa20dc0.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "253bf280.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a8d7556c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1f85a75f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ce4f8723.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "05f2a901.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3c9b0459.json", "programs": [{"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (columns $v3)) in let $v4::list(list(color)) = (rows $v3) in let $v5::list(list(color)) = (reverse $v4) in (columns_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::grid(color) = (rows_to_grid $v2) in let $v4::list(list(color)) = (columns $v3) in let $v5::list(list(color)) = (reverse $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::grid(color) = (columns_to_grid $v4) in let $v6::list(list(color)) = (rows $v5) in let $v7::list(list(color)) = (reverse $v6) in (columns_to_grid $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::grid(color) = (rows_to_grid $v4) in let $v6::list(list(color)) = (columns $v5) in let $v7::list(list(color)) = (reverse $v6) in (columns_to_grid $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::grid(color) = (rows_to_grid $v4) in let $v6::list(list(color)) = (columns $v5) in let $v7::list(list(color)) = (reverse $v6) in let $v8::list(list(color)) = (reverse $v7) in let $v9::list(list(color)) = (reverse $v8) in (columns_to_grid $v9)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::grid(color) = (rows_to_grid $v2) in let $v4::list(list(color)) = (columns $v3) in let $v5::list(list(color)) = (reverse $v4) in let $v6 = rev($v2 = (tuple2_second $v6)) in let $v7, $v8 = rev($v6 = (tuple2 $v7 $v8)) in let $v9::tuple2(list(list(color)), t0) = (tuple2 $v5 $v8) in let $v10::list(list(color)) = (tuple2_first $v9) in (rows_to_grid $v10)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::grid(color) = (rows_to_grid $v2) in let $v4::list(list(color)) = (columns $v3) in let $v5::list(list(color)) = (reverse $v4) in let $v6 = rev($inp0 = (rows_to_grid $v6)) in let $v7 = rev($v6 = (tuple2_first $v7)) in let $v8 = rev($v7 = (tuple2_second $v8)) in let $v9::tuple2(list(list(color)), t0) = (tuple2 $v5 $v8) in let $v10::list(list(color)) = (tuple2_first $v9) in (rows_to_grid $v10)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::grid(color) = (rows_to_grid $v2) in let $v4::list(list(color)) = (columns $v3) in let $v5::list(list(color)) = (reverse $v4) in let $v6 = rev($inp0 = (tuple2_first $v6)) in let $v7 = rev($v6 = (tuple2_second $v7)) in let $v8, $v9 = rev($v7 = (tuple2 $v8 $v9)) in let $v10::tuple2(list(list(color)), t0) = (tuple2 $v5 $v9) in let $v11::list(list(color)) = (tuple2_first $v10) in (rows_to_grid $v11)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::grid(color) = (rows_to_grid $v2) in let $v4::list(list(color)) = (columns $v3) in let $v5::list(list(color)) = (reverse $v4) in let $v6 = rev($inp0 = (tuple2_first $v6)) in let $v7, $v8 = rev($v6 = (tuple2 $v7 $v8)) in let $v9 = rev($v7 = (tuple2_first $v9)) in let $v10::tuple2(list(list(color)), t0) = (tuple2 $v5 $v9) in let $v11::list(list(color)) = (tuple2_first $v10) in (rows_to_grid $v11)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::grid(color) = (rows_to_grid $v2) in let $v4::list(list(color)) = (columns $v3) in let $v5::list(list(color)) = (reverse $v4) in let $v6 = rev($inp0 = (tuple2_second $v6)) in let $v7 = rev($v6 = (tuple2_first $v7)) in let $v8, $v9 = rev($v7 = (tuple2 $v8 $v9)) in let $v10 = rev($v8 = (tuple2_second $v10)) in let $v11::tuple2(list(list(color)), t0) = (tuple2 $v5 $v10) in let $v12::list(list(color)) = (tuple2_first $v11) in (rows_to_grid $v12)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "90c28cc7.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "2dee498d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3ac3eb23.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "5168d44c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f1cefba8.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a3df8b1e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e6721834.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6d0160f0.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6cf79266.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "cce03e0d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "7b6016b9.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6d75e8bb.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e9614598.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "08ed6ac7.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "67385a82.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "22eb0ac0.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "25d8a9c8.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "bda2d7a6.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b775ac94.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d43fd935.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "cdecee7f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "c9e6f938.json", "programs": [{"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (concat $v1 $v2) in (columns_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4::list(list(color)) = (concat $v3 $v2) in (columns_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (reverse $v2) in let $v4::list(list(color)) = (concat $v3 $v2) in (columns_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3::list(list(color)) = (tuple2_first $v2) in let $v4 = rev($v1 = (reverse $v4)) in let $v5::list(list(color)) = (concat $v3 $v4) in (columns_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_second $v2)) in let $v3::list(list(color)) = (tuple2_second $v2) in let $v4 = rev($v1 = (reverse $v4)) in let $v5::list(list(color)) = (concat $v3 $v4) in (columns_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (tuple2_second $v3)) in let $v4::list(list(color)) = (tuple2_second $v3) in let $v5::list(list(color)) = (reverse $v4) in let $v6::list(list(color)) = (concat $v5 $v2) in (columns_to_grid $v6)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_second $v2)) in let $v3 = rev($v1 = (reverse $v3)) in let $v4::list(list(color)) = (concat $v1 $v3) in let $v5::grid(color) = (columns_to_grid $v4) in let $v6::tuple2(t0, grid(color)) = (tuple2 $v2 $v5) in (tuple2_second $v6)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4::list(list(color)) = (reverse $v3) in let $v5::list(list(color)) = (reverse $v4) in let $v6::list(list(color)) = (concat $v5 $v2) in (columns_to_grid $v6)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_first $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3 = rev($inp0 = (columns_to_grid $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::list(list(color)) = (concat $v3 $v4) in let $v6::grid(color) = (columns_to_grid $v5) in let $v7::tuple2(t0, grid(color)) = (tuple2 $v2 $v6) in (tuple2_second $v7)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_second $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3 = rev($inp0 = (columns_to_grid $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::list(list(color)) = (concat $v3 $v4) in let $v6::grid(color) = (columns_to_grid $v5) in let $v7::tuple2(t0, grid(color)) = (tuple2 $v2 $v6) in (tuple2_second $v7)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "9565186b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1b60fb0c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "fcc82909.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "178fcbfb.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "72ca375d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "4be741c5.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3bdb4ada.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "27a28665.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "0520fde7.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f5b8619d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a61f2674.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "5521c0d9.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1caeab9d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3befdf3e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ea32f347.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e8dc4411.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "4c4377d9.json", "programs": [{"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (concat $v2 $v1) in (rows_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in let $v3::list(list(color)) = (concat $v2 $v1) in (rows_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (reverse $v2) in let $v4::list(list(color)) = (concat $v2 $v3) in (rows_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v1 = (tuple2_first $v3)) in let $v4::list(list(color)) = (tuple2_first $v3) in let $v5::list(list(color)) = (concat $v2 $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (tuple2_first $v3)) in let $v4::list(list(color)) = (tuple2_first $v3) in let $v5::list(list(color)) = (concat $v4 $v1) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_first $v1)) in let $v2, $v3 = rev($v1 = (tuple2 $v2 $v3)) in let $v4 = rev($v2 = (rows_to_grid $v4)) in let $v5::list(list(color)) = (reverse $v4) in let $v6::list(list(color)) = (concat $v5 $v4) in (rows_to_grid $v6)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v1 = (tuple2_first $v3)) in let $v4, $v5 = rev($v3 = (tuple2 $v4 $v5)) in let $v6::list(list(color)) = (concat $v2 $v4) in (rows_to_grid $v6)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3, $v4 = rev($v2 = (tuple2 $v3 $v4)) in let $v5::list(list(color)) = (reverse $v3) in let $v6::list(list(color)) = (concat $v5 $v1) in (rows_to_grid $v6)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3, $v4 = rev($v2 = (tuple2 $v3 $v4)) in let $v5::list(list(color)) = (reverse $v3) in let $v6::list(list(color)) = (concat $v5 $v3) in (rows_to_grid $v6)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (concat $v2 $v1) in let $v4::grid(color) = (rows_to_grid $v3) in let $v5::tuple2(t0, grid(color)) = (tuple2 $v2 $v4) in (tuple2_second $v5)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "91413438.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b2862040.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "469497ad.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d10ecb37.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1f0c79e5.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "eb281b96.json", "programs": [{"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in let $v7 = rev($v1 = (tuple2_second $v7)) in let $v8, $v9 = rev($v7 = (tuple2 $v8 $v9)) in let $v10, $v11 = rev($v9 = (cons $v10 $v11)) in let $v12::list(list(color)) = (concat $v6 $v11) in let $v13, $v14 = rev($v9 = (cons $v13 $v14)) in let $v15 = rev($v13 = (tuple2_first $v15)) in let $v16::tuple2(list(list(color)), t0) = (tuple2 $v6 $v15) in let $v17::list(list(color)) = (tuple2_first $v16) in let $v18::list(list(color)) = (concat $v12 $v17) in let $v19::list(list(color)) = (concat $v3 $v18) in (rows_to_grid $v19)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in let $v7, $v8 = rev($v3 = (cons $v7 $v8)) in let $v9::list(list(color)) = (concat $v6 $v8) in let $v10 = rev($v1 = (tuple2_second $v10)) in let $v11, $v12 = rev($v10 = (tuple2 $v11 $v12)) in let $v13, $v14 = rev($v12 = (cons $v13 $v14)) in let $v15 = rev($v13 = (tuple2_first $v15)) in let $v16::tuple2(list(list(color)), t0) = (tuple2 $v6 $v15) in let $v17::list(list(color)) = (tuple2_first $v16) in let $v18::list(list(color)) = (concat $v9 $v17) in let $v19::list(list(color)) = (concat $v3 $v18) in (rows_to_grid $v19)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in let $v7 = rev($v1 = (tuple2_second $v7)) in let $v8, $v9 = rev($v7 = (tuple2 $v8 $v9)) in let $v10, $v11 = rev($v9 = (cons $v10 $v11)) in let $v12::list(list(color)) = (concat $v6 $v11) in let $v13, $v14 = rev($v9 = (cons $v13 $v14)) in let $v15, $v16 = rev($v13 = (cons $v15 $v16)) in let $v17::tuple2(list(list(color)), t0) = (tuple2 $v6 $v16) in let $v18::list(list(color)) = (tuple2_first $v17) in let $v19::list(list(color)) = (concat $v12 $v18) in let $v20::list(list(color)) = (concat $v3 $v19) in (rows_to_grid $v20)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in let $v7, $v8 = rev($v3 = (cons $v7 $v8)) in let $v9::list(list(color)) = (concat $v6 $v8) in let $v10 = rev($v1 = (tuple2_second $v10)) in let $v11, $v12 = rev($v10 = (tuple2 $v11 $v12)) in let $v13, $v14 = rev($v12 = (cons $v13 $v14)) in let $v15, $v16 = rev($v13 = (cons $v15 $v16)) in let $v17::tuple2(list(list(color)), t0) = (tuple2 $v6 $v16) in let $v18::list(list(color)) = (tuple2_first $v17) in let $v19::list(list(color)) = (concat $v9 $v18) in let $v20::list(list(color)) = (concat $v3 $v19) in (rows_to_grid $v20)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in let $v7 = rev($v1 = (tuple2_second $v7)) in let $v8, $v9 = rev($v7 = (tuple2 $v8 $v9)) in let $v10 = rev($v9 = (reverse $v10)) in let $v11::list(list(color)) = (reverse $v10) in let $v12, $v13 = rev($v11 = (cons $v12 $v13)) in let $v14::list(list(color)) = (concat $v6 $v13) in let $v15, $v16 = rev($v9 = (cons $v15 $v16)) in let $v17 = rev($v15 = (tuple2_first $v17)) in let $v18::tuple2(list(list(color)), t0) = (tuple2 $v6 $v17) in let $v19::list(list(color)) = (tuple2_first $v18) in let $v20::list(list(color)) = (concat $v14 $v19) in let $v21::list(list(color)) = (concat $v3 $v20) in (rows_to_grid $v21)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4::list(list(color)) = (reverse $v3) in let $v5::list(list(color)) = (reverse $v4) in let $v6 = rev($v3 = (reverse $v6)) in let $v7, $v8 = rev($v6 = (cons $v7 $v8)) in let $v9, $v10 = rev($v3 = (cons $v9 $v10)) in let $v11::list(list(color)) = (concat $v8 $v10) in let $v12 = rev($v1 = (tuple2_second $v12)) in let $v13, $v14 = rev($v12 = (tuple2 $v13 $v14)) in let $v15, $v16 = rev($v14 = (cons $v15 $v16)) in let $v17 = rev($v15 = (tuple2_first $v17)) in let $v18::tuple2(list(list(color)), t0) = (tuple2 $v8 $v17) in let $v19::list(list(color)) = (tuple2_first $v18) in let $v20::list(list(color)) = (concat $v11 $v19) in let $v21::list(list(color)) = (concat $v5 $v20) in (rows_to_grid $v21)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in let $v7 = rev($v1 = (tuple2_second $v7)) in let $v8, $v9 = rev($v7 = (tuple2 $v8 $v9)) in let $v10 = rev($v9 = (reverse $v10)) in let $v11::list(list(color)) = (reverse $v10) in let $v12, $v13 = rev($v11 = (cons $v12 $v13)) in let $v14::list(list(color)) = (concat $v6 $v13) in let $v15, $v16 = rev($v9 = (cons $v15 $v16)) in let $v17, $v18 = rev($v15 = (cons $v17 $v18)) in let $v19::tuple2(list(list(color)), t0) = (tuple2 $v6 $v18) in let $v20::list(list(color)) = (tuple2_first $v19) in let $v21::list(list(color)) = (concat $v14 $v20) in let $v22::list(list(color)) = (concat $v3 $v21) in (rows_to_grid $v22)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (reverse $v3)) in let $v4::list(list(color)) = (reverse $v3) in let $v5::list(list(color)) = (reverse $v4) in let $v6 = rev($v3 = (reverse $v6)) in let $v7, $v8 = rev($v6 = (cons $v7 $v8)) in let $v9, $v10 = rev($v3 = (cons $v9 $v10)) in let $v11::list(list(color)) = (concat $v8 $v10) in let $v12 = rev($v1 = (tuple2_second $v12)) in let $v13, $v14 = rev($v12 = (tuple2 $v13 $v14)) in let $v15, $v16 = rev($v14 = (cons $v15 $v16)) in let $v17, $v18 = rev($v15 = (cons $v17 $v18)) in let $v19::tuple2(list(list(color)), t0) = (tuple2 $v8 $v18) in let $v20::list(list(color)) = (tuple2_first $v19) in let $v21::list(list(color)) = (concat $v11 $v20) in let $v22::list(list(color)) = (concat $v5 $v21) in (rows_to_grid $v22)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (columns $v2)) in let $v3 = rev($v2 = (columns_to_grid $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::list(list(color)) = (reverse $v4) in let $v6::list(list(color)) = (reverse $v5) in let $v7::list(list(color)) = (reverse $v6) in let $v8 = rev($v1 = (reverse $v8)) in let $v9 = rev($v8 = (reverse $v9)) in let $v10 = rev($v9 = (reverse $v10)) in let $v11, $v12 = rev($v10 = (cons $v11 $v12)) in let $v13, $v14 = rev($v9 = (cons $v13 $v14)) in let $v15::list(list(color)) = (concat $v12 $v14) in let $v16 = rev($v1 = (tuple2_second $v16)) in let $v17, $v18 = rev($v16 = (tuple2 $v17 $v18)) in let $v19, $v20 = rev($v18 = (cons $v19 $v20)) in let $v21 = rev($v19 = (tuple2_first $v21)) in let $v22::tuple2(list(list(color)), t0) = (tuple2 $v12 $v21) in let $v23::list(list(color)) = (tuple2_first $v22) in let $v24::list(list(color)) = (concat $v15 $v23) in let $v25::list(list(color)) = (concat $v7 $v24) in (rows_to_grid $v25)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (columns $v2)) in let $v3 = rev($v2 = (columns_to_grid $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::list(list(color)) = (reverse $v4) in let $v6::list(list(color)) = (reverse $v5) in let $v7::list(list(color)) = (reverse $v6) in let $v8 = rev($v1 = (reverse $v8)) in let $v9 = rev($v8 = (reverse $v9)) in let $v10 = rev($v9 = (reverse $v10)) in let $v11, $v12 = rev($v10 = (cons $v11 $v12)) in let $v13, $v14 = rev($v9 = (cons $v13 $v14)) in let $v15::list(list(color)) = (concat $v12 $v14) in let $v16 = rev($v1 = (tuple2_second $v16)) in let $v17, $v18 = rev($v16 = (tuple2 $v17 $v18)) in let $v19, $v20 = rev($v18 = (cons $v19 $v20)) in let $v21, $v22 = rev($v19 = (cons $v21 $v22)) in let $v23::tuple2(list(list(color)), t0) = (tuple2 $v12 $v22) in let $v24::list(list(color)) = (tuple2_first $v23) in let $v25::list(list(color)) = (concat $v15 $v24) in let $v26::list(list(color)) = (concat $v7 $v25) in (rows_to_grid $v26)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "c8f0f002.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e76a88a6.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "bc1d5164.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "88a10436.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6d58a25d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "eb5a1d5d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "760b3cac.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ce22a75a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a65b410d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "5582e5ca.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "0b148d64.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e98196ab.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "73251a56.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "0a938d79.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e48d4e1a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "c0f76784.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "4522001f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d4469b4b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "caa06a1f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "7fe24cdd.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "447fd412.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d23f8c26.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "321b1fc6.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "4938f0c2.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "82819916.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e8593010.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "85c4e7cd.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "445eab21.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "42a50994.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "bd4472b8.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "28e73c20.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "54d82841.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b230c067.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "67a3c6ac.json", "programs": [{"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in (columns_to_grid $v2)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in (columns_to_grid $v2)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3::list(list(color)) = (tuple2_first $v2) in let $v4::list(list(color)) = (reverse $v3) in (columns_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_second $v2)) in let $v3::list(list(color)) = (tuple2_second $v2) in let $v4::list(list(color)) = (reverse $v3) in (columns_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_first $v1)) in let $v2, $v3 = rev($v1 = (tuple2 $v2 $v3)) in let $v4 = rev($v2 = (columns_to_grid $v4)) in let $v5 = rev($v4 = (reverse $v5)) in (columns_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (reverse $v2) in let $v4::list(list(color)) = (reverse $v3) in (columns_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in let $v3::list(list(color)) = (reverse $v2) in let $v4::list(list(color)) = (reverse $v3) in (columns_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in let $v3::grid(color) = (columns_to_grid $v2) in let $v4::tuple2(grid(color), t0) = (tuple2 $v3 $v3) in (tuple2_first $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2, $v3 = rev($v1 = (cons $v2 $v3)) in let $v4::list(list(color)) = (cons $v2 $v3) in let $v5::list(list(color)) = (reverse $v4) in (columns_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in let $v3::grid(color) = (columns_to_grid $v2) in let $v4 = rev($inp0 = (tuple2_second $v4)) in let $v5::tuple2(grid(color), t0) = (tuple2 $v3 $v4) in (tuple2_first $v5)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a48eeaf7.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ce9e57f2.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "855e0971.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "5ad4f10b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "feca6190.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "234bbc79.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "7df24a62.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a416b8f3.json", "programs": [{"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2::list(list(color)) = (concat $v1 $v1) in (columns_to_grid $v2)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3::list(list(color)) = (tuple2_first $v2) in let $v4::list(list(color)) = (concat $v1 $v3) in (columns_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (rows $v2)) in let $v3 = rev($v2 = (columns_to_grid $v3)) in let $v4::list(list(color)) = (concat $v3 $v3) in (columns_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_second $v1)) in let $v2, $v3 = rev($v1 = (tuple2 $v2 $v3)) in let $v4 = rev($v3 = (columns_to_grid $v4)) in let $v5::list(list(color)) = (concat $v4 $v4) in (columns_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (concat $v2 $v2) in let $v4::list(list(color)) = (reverse $v3) in (columns_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in let $v3::list(list(color)) = (reverse $v2) in let $v4::list(list(color)) = (concat $v1 $v3) in (columns_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2, $v3 = rev($v1 = (cons $v2 $v3)) in let $v4::list(list(color)) = (cons $v2 $v3) in let $v5::list(list(color)) = (concat $v1 $v4) in (columns_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($inp0 = (tuple2_second $v2)) in let $v3, $v4 = rev($v2 = (tuple2 $v3 $v4)) in let $v5 = rev($v4 = (columns_to_grid $v5)) in let $v6::list(list(color)) = (concat $v1 $v5) in (columns_to_grid $v6)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_second $v1)) in let $v2, $v3 = rev($v1 = (tuple2 $v2 $v3)) in let $v4 = rev($v3 = (columns_to_grid $v4)) in let $v5 = rev($inp0 = (columns_to_grid $v5)) in let $v6::list(list(color)) = (concat $v4 $v5) in (columns_to_grid $v6)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in let $v3::tuple2(t0, list(list(color))) = (tuple2 $v2 $v1) in let $v4::list(list(color)) = (tuple2_second $v3) in let $v5::list(list(color)) = (concat $v1 $v4) in (columns_to_grid $v5)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a740d043.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ef135b50.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "681b3aeb.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "50846271.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "794b24be.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "75b8110e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "09629e4f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b7249182.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1f642eb9.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ac0a08a4.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "8efcae92.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "9ecd008a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "5daaa586.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1fad071e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a61ba2ce.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ce602527.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "543a7ed5.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3eda0437.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d07ae81c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f8ff0b80.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "83302e8f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b1948b0a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1cf80156.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "963e52fc.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3618c87e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d9fac9be.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "007bbfb7.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b8825c91.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6f8cd79b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "47c1f68c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d90796e8.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "dc1df850.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "af902bf9.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "2c608aff.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "834ec97d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "8eb1be9a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e50d258f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "48d8fb45.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3aa6fb7a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "0ca9ddb6.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "05269061.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "c59eb873.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "0dfd9992.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "868de0fa.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ff805c23.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "40853293.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "63613498.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b0c4d837.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "36fdfd69.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "5117e062.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d4a91cb9.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "746b3537.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3428a4f5.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "bb43febb.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "60b61512.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ea786f4a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "9dfd6313.json", "programs": [{"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in (rows_to_grid $v1)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in (columns_to_grid $v1)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (columns $v2)) in $v2", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3::list(list(color)) = (tuple2_first $v2) in (rows_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3::list(list(color)) = (tuple2_first $v2) in (columns_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (reverse $v2) in (rows_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (reverse $v2) in (columns_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_first $v1)) in let $v2 = rev($inp0 = (rows_to_grid $v2)) in let $v3::grid(color) = (columns_to_grid $v2) in let $v4::tuple2(t0, grid(color)) = (tuple2 $v1 $v3) in (tuple2_second $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (tuple2_second $v1)) in let $v2 = rev($inp0 = (rows_to_grid $v2)) in let $v3::grid(color) = (columns_to_grid $v2) in let $v4::tuple2(t0, grid(color)) = (tuple2 $v1 $v3) in (tuple2_second $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2::grid(color) = (rows_to_grid $v1) in let $v3 = rev($v1 = (tuple2_first $v3)) in let $v4::tuple2(grid(color), t0) = (tuple2 $v2 $v3) in (tuple2_first $v4)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d511f180.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "9edfc990.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "aba27056.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "ae3edfdc.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "beb8660c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "0d3d703e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b9b7f026.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f35d900a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "fcb5c309.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b527c5c6.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "6ecd11f4.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "5bd6f4ac.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "272f95fa.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "4612dd53.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e5062a87.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "06df4c85.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "694f12f3.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "41e4d17e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "c444b776.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a79310a0.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "1bfc4729.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e509e548.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "53b68214.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d687bc17.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e73095fd.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "496994bd.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f2829549.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f15e1fac.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "aabf363d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "8d5021e8.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3345333e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "8a004b2b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b6afb2da.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "045e512c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "673ef223.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "88a62173.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "99fa7670.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "11852cab.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "bbc9ae5d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "444801d8.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "995c5fa3.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "9d9215db.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f8a8fe49.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3631a71a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "9172f3a0.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "3f7978a0.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "0962bcdd.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "2204b7a8.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "b782dc8a.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "9af7a82c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "31aa019c.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "0e206a2e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "7c008303.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "00d62c1b.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d4f3cd78.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "8e5a5113.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "44d8ac46.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "23b5c85d.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "29ec7d0e.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "d9f24cd1.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "f25fbde4.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "137eaa0f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e26a3af2.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "57aa92db.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "9aec4887.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "2bcee788.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "e40b9e2f.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "46f33fce.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "a64e4611.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "22168020.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "228f6490.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "7b7f7511.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "8be77c9e.json", "programs": [{"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (concat $v1 $v2) in (rows_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2::list(list(color)) = (reverse $v1) in let $v3::list(list(color)) = (concat $v1 $v2) in (rows_to_grid $v3)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3::list(list(color)) = (reverse $v2) in let $v4::list(list(color)) = (concat $v3 $v2) in (rows_to_grid $v4)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (reverse $v2)) in let $v3 = rev($v2 = (tuple2_second $v3)) in let $v4::list(list(color)) = (tuple2_second $v3) in let $v5::list(list(color)) = (concat $v1 $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3::list(list(color)) = (tuple2_first $v2) in let $v4 = rev($v1 = (reverse $v4)) in let $v5::list(list(color)) = (concat $v3 $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (columns $v2)) in let $v3 = rev($v2 = (columns_to_grid $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::list(list(color)) = (concat $v1 $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_first $v2)) in let $v3::list(list(color)) = (tuple2_first $v2) in let $v4::list(list(color)) = (reverse $v3) in let $v5::list(list(color)) = (concat $v3 $v4) in (rows_to_grid $v5)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($v1 = (tuple2_second $v2)) in let $v3, $v4 = rev($v2 = (tuple2 $v3 $v4)) in let $v5::list(list(color)) = (reverse $v1) in let $v6::list(list(color)) = (concat $v4 $v5) in (rows_to_grid $v6)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (columns_to_grid $v1)) in let $v2 = rev($v1 = (columns $v2)) in let $v3 = rev($v2 = (rows_to_grid $v3)) in let $v4 = rev($v3 = (reverse $v4)) in let $v5::list(list(color)) = (reverse $v4) in let $v6::list(list(color)) = (concat $v5 $v4) in (rows_to_grid $v6)", "logLikelihood": 0.0}, {"program": "let $v1 = rev($inp0 = (rows_to_grid $v1)) in let $v2 = rev($inp0 = (tuple2_second $v2)) in let $v3, $v4 = rev($v2 = (tuple2 $v3 $v4)) in let $v5 = rev($v4 = (rows_to_grid $v5)) in let $v6::list(list(color)) = (reverse $v5) in let $v7::list(list(color)) = (concat $v1 $v6) in (rows_to_grid $v7)", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "dae9d2b5.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "2bee17df.json", "programs": []}, {"request": {"constructor": "->", "arguments": {"inp0": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "output": {"constructor": "grid", "arguments": [{"constructor": "color", "arguments": []}]}}, "task": "98cf29f8.json", "programs": []}], "topK": 2, "pseudoCounts": 1.0, "aic": 1.0, "structurePenalty": 1.0, "topk_use_only_likelihood": false, "CPUs": 8, "iteration": 1}